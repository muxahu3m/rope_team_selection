import streamlit as st
import os 
import json
import io
import pandas as pd
from itertools import combinations

st.set_page_config(page_title="–ü–æ–¥–±–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–∞–Ω–∞—Ç–∞", page_icon="üôã")
st.title('–ü–æ–¥–±–æ—Ä —Å–æ—Å—Ç–∞–≤–∞ –¥–ª—è –∫–∞–Ω–∞—Ç–∞ ActionLab')
clean_PD = False #st.sidebar.checkbox('–°–∫—Ä—ã–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', False)
st.write('–°–∫–∞—á–∞–π—Ç–µ —à–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞ —Å–ª–µ–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —Å–ª–µ–≤–∞')
max_team = st.sidebar.number_input('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', min_value=2, max_value=10, value=8)
max_weight = st.sidebar.number_input('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å, –∫–≥.', min_value=100, max_value=1000, value=650)

df = pd.read_excel('–ö–∞–Ω–∞—Ç_people.xlsx')
weights = df['–í–µ—Å'].astype(float).tolist()
names = df['–£—á–∞—Å—Ç–Ω–∏–∫'].tolist()


# max_weight = 650
# max_team = 8


buffer = io.BytesIO()
df.to_excel(buffer, sheet_name='Sheet1', index=False)
download2 = st.sidebar.download_button(
    label="–®–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–º–∞–Ω–¥–µ",
    data=buffer,
    key=1,
    file_name=f'–ö–∞–Ω–∞—Ç_people.xlsx',
    mime='application/vnd.ms-excel'
)

uploaded_file = st.sidebar.file_uploader('–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å —Å–æ—Å—Ç–∞–≤–æ–º —É—á–∞—Å–Ω–∏–∫–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —à–∞–±–ª–æ–Ω–æ–º', type={ "xlsx"})

if uploaded_file:
    # raw_text = docx2txt.process(uploaded_file)
    # df = pd.read_excel('rope_team/–ö–∞–Ω–∞—Ç_people.xlsx')
    df = pd.read_excel(uploaded_file)
    # st.write("dogovor.docx", uploaded_file.name)
    weights2 = df.apply(lambda x: x['–£—á–∞—Å—Ç–Ω–∏–∫']+'_|'+str(x['–í–µ—Å']), axis=1)
    results = {}
    output = ""
    for j in [max_team,max_team-1,max_team-2]:
        results[j] = []
        combi = combinations(weights2, j)
        variants = list(combi)
        for v in variants:
            w = sum([float(a.split('_|')[1]) for a in v])
            if w <= max_weight:
                results[j].append([j,w]+(sorted([a.split('_|')[0] for a in v])))
        d = results[j]
        d.sort(key=lambda x: x[1])
        tp = pd.DataFrame(d[::-1]).drop_duplicates()
        if len(tp)>0:
            d = tp.to_records(index=False).tolist()
            fr = f"""–ü–æ–¥–æ–±—Ä–∞–Ω–æ {len(d)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏–∑ {j} —á–µ–ª–æ–≤–µ–∫ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –≤–µ—Å–µ {max_weight} –∫–≥."""
            output = output + fr + '\n'
            print(fr)
            for m in d[:20]:
                r = f"–°—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å {m[1]} –∫–≥. –°–æ—Å—Ç–∞–≤:{', '.join(m[2:])}"
                output = output + r + '\n'
                print(r)
        else:
            fr = f"""–ù–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –∏–∑ {j} —á–µ–ª–æ–≤–µ–∫ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –≤–µ—Å–µ {max_weight} –∫–≥. :("""
            output = output + fr + '\n'
            print(fr)


    st.text_area('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–¥–±–æ—Ä–∫–∏: ', output, height=600)


